/*1 завдание(Включить нового человека в таблицу с клиентами. Его имя Попов Илья, его email popov@test, проживает он в Москве.) */

INSERT INTO  client (name_client, city_id, email)
SELECT 'Попов Илья', city_id, 'popov@test'
FROM city WHERE name_city = 'Москва';


/*2 завдание(Создать новый заказ для Попова Ильи. Его комментарий для заказа: «Связаться со мной по вопросу доставки».) */

INSERT INTO buy (buy_description, client_id)
SELECT 'Связаться со мной по вопросу доставки', client_id FROM client WHERE name_client = 'Попов Илья';
SELECT * FROM buy;

/*3 завдание(В таблицу buy_book добавить заказ с номером 5. Этот заказ должен содержать книгу Пастернака «Лирика» в количестве двух экземпляров и книгу Булгакова «Белая гвардия» в одном экземпляре.) */

INSERT INTO buy_book (buy_id, book_id, amount)
SELECT 5, book_id, 2 FROM book, author
WHERE name_author LIKE 'Пастернак%' AND title='Лирика';

INSERT INTO buy_book (buy_id, book_id, amount)
SELECT 5, book_id, 1 FROM book, author
WHERE name_author LIKE 'Булгаков%' AND title='Белая гвардия';

/*4 завдание(Количество тех книг на складе, которые были включены в заказ с номером 5, уменьшить на то количество, которое в заказе с номером 5  указано.) */

update book as b inner join buy_book as bb using(book_id)
set b.amount = b.amount - bb.amount 
where bb.buy_id = 5;

/* 5 Задание(Создать счет (таблицу buy_pay) на оплату заказа с номером 5, в который включить название книг, их автора, цену, количество заказанных книг и  стоимость. Последний столбец назвать Стоимость. Информацию в таблицу занести в отсортированном по названиям книг виде.)*/

CREATE TABLE buy_pay AS
SELECT title, name_author, price, buy_book.amount, book.price*buy_book.amount AS Стоимость
FROM buy_book
JOIN book ON book.book_id=buy_book.book_id
JOIN author ON author.author_id=book.author_id
WHERE buy_book.buy_id=5
ORDER BY book.title;
SELECT * FROM buy_pay;

/* 6 Задание(Создать общий счет (таблицу buy_pay) на оплату заказа с номером 5. Куда включить номер заказа, количество книг в заказе (название столбца Количество) и его общую стоимость (название столбца Итого). Для решения используйте ОДИН запрос.)*/

CREATE TABLE buy_pay
SELECT buy_book.buy_id, 
SUM(buy_book.amount) as Количество,
SUM(book.price*buy_book.amount)  as Итого
FROM buy_book
JOIN book USING(book_id)
WHERE buy_id=5
GROUP BY 1;
SELECT*FROM buy_pay;

/* 7 Задание(В таблицу buy_step для заказа с номером 5 включить все этапы из таблицы step, которые должен пройти этот заказ. В столбцы date_step_beg и date_step_end всех записей занести Null.)*/

INSERT INTO buy_step (buy_id, step_id)
SELECT buy_id, step_id
FROM step CROSS JOIN buy     
WHERE buy_id = 5;

SELECT * FROM buy_step;

/* 8 Задание(В таблицу buy_step занести дату 12.04.2020 выставления счета на оплату заказа с номером 5.)*/

update buy_step
set date_step_beg = '2020-04-12'
where buy_id = 5 and step_id = 1;

select*from buy_step;



/* 9 Задание(Завершить этап «Оплата» для заказа с номером 5, вставив в столбец date_step_end дату 13.04.2020, и начать следующий этап («Упаковка»), задав в столбце date_step_beg для этого этапа ту же дату.)*/

UPDATE buy_step, step
    SET date_step_end='2020-04-13'
        WHERE (buy_step.buy_id=5 AND buy_step.step_id=(SELECT step.step_id WHERE step.name_step='Оплата'));

UPDATE buy_step AS bs, step
    SET bs.date_step_beg=
        (SELECT bn.date_step_end FROM (SELECT * FROM buy_step) AS bn WHERE (bn.buy_id=5 AND bn.step_id=(SELECT step.step_id FROM step WHERE step.name_step='Оплата')))
     WHERE (bs.buy_id=5 AND bs.step_id=(SELECT step.step_id WHERE step.name_step='Оплата')+1);

        
SELECT * FROM buy_step;
